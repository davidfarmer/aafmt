<section xml:id="sec_PolynomialCodes_CyclicBinaryCodes">
  <title>Cyclic Binary Codes</title>
  <p>
    Recall from the chapter on algebraic encoding,
    that a code is linear if the code is determined by the null space of some matrix <m>H \in \mathbb{M}_{m\times n}(\mathbb{Z}_2)</m>.<fn>
    <m>{M}_{m\times n}(\mathbb{Z}_2)</m> is the set of matrices of dimension
    <m>m \times n</m> whose elements are elements of <m>\mathbb{Z}_2</m>.
    </fn> So consider the codes generated by the following generator matrix:
    <me>
      G_1 = \begin{pmatrix}1 \amp  0 \amp  0 \\ 0 \amp  1 \amp  0 \\ 0 \amp  0 \amp  1 \\ 1 \amp  0 \amp  0 \\ 0 \amp  1 \amp  0 \\ 0 \amp  0 \amp  1 \end{pmatrix}
    </me>
  </p>
  <p>
    Using the methods in the previous chapter we find the resulting code words for the matrix are as follows:
    <me>
      \begin{array}{rclccrcl} (000) \amp  \mapsto \amp  (000000) \amp  \amp  \amp  (100) \amp  \mapsto \amp  (100100) \\ (001) \amp  \mapsto \amp  (001001) \amp  \amp  \amp  (101) \amp  \mapsto \amp  (101101) \\ (010) \amp  \mapsto \amp  (010010) \amp  \amp  \amp  (110) \amp  \mapsto \amp  (110110) \\ (011) \amp  \mapsto \amp  (011011) \amp  \amp  \amp  (111) \amp  \mapsto \amp  (111111). \end{array}
    </me>
  </p>
  <p>
    This matrix follows the typical rules of linear codes.
    However there is an additional interesting and useful property of these codewords.
    In order to describe the property we need the following definition.
  </p>
  <definition>
    <statement>
      <p>
        The <term> cyclic 1-shift</term>
            <idx><h>Cyclic</h><h>1-shift</h></idx>
        of a codeword is the codeword obtained by taking the leftmost bit in the codeword and moving it to the rightmost position.
        The <term> cyclic <m>n</m>-shift</term>
            <idx><h>Cyclic</h><h><m>n</m>-shift</h></idx>
        of a codeword is the result of <m>n</m> 1-shifts applied to that codeword.
        In the following we sometimes leave off the word
        <q>cyclic</q>
        for short: so
        <q>1-shift</q>
        means the same as
        <q>cyclic 1-shift</q>, etc.
      </p>
    </statement>
  </definition>
  <p>
    According to this definition, (00101) when cyclic 1-shifted results in (01010),
    or when cyclic 3-shifted results in (01001).
  </p>
  <exercise>
    <statement>
      <p>
        Shift the following codewords by the given cyclic shift.
        <ol type="a">
          <li>
            <p>
              (1011) 1-shifted
            </p>
          </li>
          <li>
            <p>
              (1010101) 1-shifted
            </p>
          </li>
          <li>
            <p>
              (1001011) 3-shifted
            </p>
          </li>
          <li>
            <p>
              (0101011010101) 5-shifted
            </p>
          </li>
          <li>
            <p>
              (0101001111001) 7-shifted
            </p>
          </li>
          <li>
            <p>
              <m>(z_n, z_{n-1} \cdots z_1,z_0)</m> 1-shifted,
              where <m>z_n \in \mathbb{Z}_2</m>
            </p>
          </li>
          <li>
            <p>
              <m>(z_n, z_{n-1} \cdots z_1,z_0)</m> 3-shifted,
              where <m>z_n \in \mathbb{Z}_2</m>
            </p>
          </li>
          <li>
            <p>
              <m>(z_{n-2}, z_{n-3} \cdots z_1, z_0, z_{n},z_{n-1})</m> (<m>n-2</m>)-shifted where <m>z_n \in \mathbb{Z}_2</m>
            </p>
          </li>
        </ol>
      </p>
    </statement>
  </exercise>
  <p>
    Now let's return to the code generated by the matrix <m>G_1</m> given above.
    Notice that each cyclic 1-shift of a codeword is also a codeword.
    For example,
    the cyclic 1-shift of the codeword <m>(001001)</m> is <m>(010010)</m>,
    which is also a code word.
    This is the same as stating that the set of codewords is
    <em>closed</em> under cyclic 1-shifts.
  </p>
  <definition>
    <statement>
      <p>
        {defcycliccode} A linear code that is closed under cyclic 1-shifts is said to be a
        <term> cyclic code</term>.
            <idx><h>Cyclic</h><h>code</h></idx>
      </p>
    </statement>
  </definition>
  <p>
    Not all linear codes are cyclic codes.
    Take the following generator matrix:
    <me>
      G_2 = \begin{pmatrix}1 \amp  0 \amp  0 \\ 1 \amp  1 \amp  0 \\ 1 \amp  1 \amp  1 \\ 1 \amp  1 \amp  1 \\ 0 \amp  1 \amp  1 \\ 0 \amp  0 \amp  1 \end{pmatrix}
    </me>
  </p>
  <p>
    The resulting code words for the <m>G_2</m> are as follows
    <me>
      \begin{array}{rclccrcl} (000) \amp  \mapsto \amp  (000000) \amp  \amp  \amp  (100) \amp  \mapsto \amp  (111100) \\ (001) \amp  \mapsto \amp  (001111) \amp  \amp  \amp  (101) \amp  \mapsto \amp  (110011) \\ (010) \amp  \mapsto \amp  (011110) \amp  \amp  \amp  (110) \amp  \mapsto \amp  (100010) \\ (011) \amp  \mapsto \amp  (010001) \amp  \amp  \amp  (111) \amp  \mapsto \amp  (101101). \end{array}
    </me>
  </p>
  <p>
    Notice that <m>(101101)</m> is a code word but <m>(011011)</m> is not a code word.
    Therefore the code that uses <m>G_2</m> as a generator matrix is not a cyclic code.
  </p>
  <p>
    Cyclic codes may be easily implemented on computers using
    <em>shift registers</em>.
    <xref ref="fig_shift">Figure</xref>
    gives some indication of how this is done for the code with generator matrix <m>G_1</m>.
  </p>
  <figure xml:id="fig_shift">
    <caption>Shift register implementation of the code generated by matrix <m>G_1</m>. The uncoded bits are placed in the bottom
    <q>registers</q>
    (represented by rectangles) for six
    <q>clock ticks</q>. At each
    <q>clock tick</q>, the other bits all move according to the dotted arrows. Binary multiplication and addition are performed on the bits according to the <m>\otimes</m> and <m>\oplus</m> symbols.</caption>
    <image width="92.5%" source="images/Shiftregister2.png"/>
  </figure>
  <exercise xml:id="exercise_PolynomialCodes_proofofcyclic">
    <statement>
      <p>
        For each of the following sets of code words,
        prove or disprove that they are closed under cyclic 1-shifts.
        <ol type="a">
          <li>
            <p>
              <me>
                \begin{array}{ccccccc} (000000) \amp  \amp  (111100) \amp  \amp  (001111) \amp  \amp  (110011)\\ (011110) \amp  \amp  (100010) \amp  \amp  (010001) \amp  \amp  (100101) \end{array}
              </me>
            </p>
          </li>
          <li>
            <p>
              <me>
                \begin{array}{ccccccc} (000000) \amp  \amp  (011100) \amp  \amp  (111100) \amp  \amp  (110011) \\ (011110) \amp  \amp  (100010) \amp  \amp  (010001) \amp  \amp  (101101) \end{array}
              </me>
            </p>
          </li>
          <li>
            <p>
              <me>
                \begin{array}{ccccccc} (000000) \amp  \amp  (111000) \amp  \amp  (000111) \amp  \amp  (101010) \\ (001110) \amp  \amp  (010101) \amp  \amp (011100) \amp  \amp  (111111) \end{array}
              </me>
            </p>
          </li>
        </ol>
      </p>
    </statement>
  </exercise>
  <exercise>
    <statement>
      <ol type="a">
        <li>
          <p>
            Prove or disprove: A cyclic code is closed under cylic <m>2</m>-shifts.
          </p>
        </li>
        <li>
          <p>
            Prove or disprove: A cyclic code is closed under cylic <m>3</m>-shifts.
          </p>
        </li>
        <li>
          <p>
            Prove or disprove: A cyclic code is closed under cylic <m>n</m>-shifts for any <m>n \in \mathbb{N}</m>.
            (Use induction if you can<ndash/>otherwise,
            you may make a more informal argument.)
          </p>
        </li>
      </ol>
    </statement>
  </exercise>
  <example xml:id="example_PolynomialCodes_cyclic_poly">
    <statement>
      <p>
        An interesting
        (and sometimes useful)
        property of some binary codes is that the reverse of each codeword is also a codeword.
        Take for example the following cyclic code of length 4 :
        <me>
          S = \{(0000),(1010),(0101),(1111)\}
        </me>
      </p>
      <p>
        The codewords <m>(0000)</m> and <m>(1111)</m> read the same backwards and forwards:
        such codewords are called <em>palindromic</em><idx><h>Codeword</h><h>palindromic</h></idx>.
            <idx><h>Palindromic</h><h>codeword</h></idx>
        The remaining two codewords <m>(1010)</m> and <m>(0101)</m> are reverses of each other.
        Thus the reverse of every codeword in <m>S</m> is also a codeword in <m>S</m>.
      </p>
      <p>
        Codes for which the reverse of every codeword is a codeword are called
        <em>reversible codes</em>.
            <idx><h>Code</h><h>reversible</h></idx>
            <idx><h>Reversible code</h></idx>
        Such codes are interesting because they can be read either backwards or forwards (although the forward and backward readings will be different!), and are useful in certain data storage applications<fn>
        See Massey, J. L. (1964).
        <q>Reversible codes</q>. <em>Information and Control</em>, 7(3), 369-380.
        </fn>.
      </p>
    </statement>
  </example>
  <exercise>
    <statement>
      <ol type="a">
        <li>
          <p>
            Give an example of a binary code that is not reversible.
          </p>
        </li>
        <li>
          <p>
            Show that all cyclic codes of length 2 and 3 are reversible codes.
          </p>
        </li>
        <li>
          <p>
            Show that all cyclic codes of lengths 4 are reversible codes.
            (<em>Hint</em>: How many code words are palindromic?
            You don't need to check these.
            The remaining code words divide into pairs,
            where the two code words in a pair are reverses of each other.
            You just need to show that the two code words in each pair are cyclic shifts of each other.)
          </p>
        </li>
        <li>
          <p>
            Show that all cyclic codes of length 5 are reversible codes.
            (<em>Hint</em>: You will need to use the cyclic codes are defined to be linear.)
          </p>
        </li>
      </ol>
    </statement>
  </exercise>
  <exercise>
    <statement>
      <p>
        Let <m>S</m> be a binary cyclic code,
        and suppose that <m>S</m> contains a palindromic codeword <m>w</m>.
        Show that the reverse of every cyclic shift of <m>w</m> is also a cyclic shift of <m>w</m>.
      </p>
    </statement>
  </exercise>
  <exercise>
    <statement>
      <p>
        Suppose a code <m>C</m> has a generator matrix <m>G</m> with two columns,
        such that the two columns are reverses of each other.
        Show that <m>C</m> is a reversible code.
      </p>
    </statement>
  </exercise>
  <exercise>
    <statement>
      <p>
        Suppose a code <m>C</m> is reversible,
        and has an odd number of codewords.
        Prove that at least one codeword in <m>C</m> is palindromic.
        Is it possible that <m>C</m> could have exactly two codewords are palindromic in this case?
      </p>
    </statement>
  </exercise>
</section>