<section xml:id="sec_Functions_Composition">
  <title>Composition of functions<nbsp/><nbsp/></title>
  <figure>
    <video youtubeplaylist="PL2uooHqQ6T7PW5na4EX8rQX2WvBBdM8Qo"/>
  </figure>
  <subsection xml:id="subsec_Functions_Composition_ConceptAndDefinition">
    <title>Concept and definition</title>
    <p>
      The term
      <q>composition</q>
      is a name that mathematicians use for applying one function to the result of another.
      Actually, this comes up fairly often in everyday life.
    </p>
    <example>
      <statement>
        <ol>
          <li>
            <p>
              The father of the mother of a person is a grandfather of the person.
              (To be precise, it is the <em>maternal</em>
              grandfather of the person <mdash/> and his or her other grandfather is <em>paternal</em>.)
              To express the relationship in a mathematical formula,
              we can write:
              <me>
                \forall x,  \Bigl( \var{grandfather}(x) = \var{father} \bigl( \var{mother}(x) \bigr) \Bigr)
              </me>.
              A mathematician abbreviates this formula by writing
              <me>
                \var{grandfather} = \var{father} \compose \var{mother}
              </me>
              and says that the (maternal)
              <m>\var{grandfather}</m> function is the <em>composition</em>
              of <m>\var{father}</m> and <m>\var{mother}</m>.
            </p>
          </li>
          <li>
            <p>
              The brother of the mother of a person is an uncle of the person,
              so <m>\var{uncle}</m> is the composition of
              <m>\var{brother}</m> and <m>\var{mother}</m>:
              <me>
                \forall x, \Bigl( \var{uncle}(x) = \var{brother} \bigl( \var{mother}(x) \bigr) \Bigr)
              </me>,
              or, more briefly,
              <me>
                \var{uncle} = \var{brother} \compose \var{mother}
              </me>.
              (For the sake of this example,
              let us ignore the issue that <m>\var{uncle}</m> and
              <m>\var{brother}</m> are not functions in general.)
            </p>
          </li>
          <li>
            <p>
              The daughter of a child is a granddaughter,
              so \var{granddaughter} is a composition of
              <m>\var{daughter}</m> and <m>\var{child}</m>:
              <me>
                \var{granddaughter} = \var{daughter} \compose \var{child}
              </me>.
            </p>
          </li>
        </ol>
      </statement>
    </example>
    <exercise xml:id="exercise_Functions_RealWorldCompositionExer">
      <statement>
        <p>
          State the usual name for each composition.
          (Ignore the fact that <m>\var{sister}</m>, <m>\var{daughter}</m>,
          and many of the other relations are not functions in general.)
          <ol type="a">
            <li xml:id="RealWorldCompositionExer-HusbandOfSister">
              <p>
                <m>\var{husband} \compose \var{sister}</m>
              </p>
            </li>
            <li xml:id="RealWorldCompositionExer-HusbandOfMother">
              <p>
                <m>\var{husband} \compose \var{mother}</m>
              </p>
            </li>
            <li xml:id="RealWorldCompositionExer-HusbandOfWife">
              <p>
                <m>\var{husband} \compose \var{wife}</m>
              </p>
            </li>
            <li xml:id="RealWorldCompositionExer-HusbandOfDaughter">
              <p>
                <m>\var{husband} \compose \var{daughter}</m>
              </p>
            </li>
            <li xml:id="RealWorldCompositionExer-MotherOfSister">
              <p>
                <m>\var{mother} \compose \var{sister}</m>
              </p>
            </li>
            <li xml:id="RealWorldCompositionExer-DaughterOfSister">
              <p>
                <m>\var{daughter} \compose \var{sister}</m>
              </p>
            </li>
            <li xml:id="RealWorldCompositionExer-ParentOfParent">
              <p>
                <m>\var{parent} \compose \var{parent}</m>
              </p>
            </li>
            <li xml:id="RealWorldCompositionExer-ChildOfChild">
              <p>
                <m>\var{child} \compose \var{child}</m>
              </p>
            </li>
            <li xml:id="RealWorldCompositionExer-ParentOfParentOfParent">
              <p>
                <m>\var{parent} \compose \var{parent} \compose \var{parent}</m>
              </p>
            </li>
            <li xml:id="RealWorldCompositionExer-ChildOfBrotherOfParent">
              <p>
                <m>\var{child} \compose \var{brother} \compose \var{parent}</m>
              </p>
            </li>
          </ol>
        </p>
      </statement>
    </exercise>
    <definition>
      <statement>
        <p>
          {composition} Suppose <m>f \colon A \to B</m> and <m>g \colon B \to C</m>.
          The <term>composition</term> of <m>g</m> and <m>f</m>
          (denoted <m>g \compose f</m>)
          is the function from<nbsp/><m>A</m> to<nbsp/><m>C</m> defined by
          <me>
            \mbox{\(g \compose f(a) = g \bigl( f(a) \bigr)\) for all \(a \in A\).}
          </me>
        </p>
        <p>
              <idx><h>Composition</h><h>definition of</h></idx>
        </p>
      </statement>
    </definition>
    <p>
      The notation <m>g \compose f</m> is read as
      <q><m>g</m> compose <m>f</m></q>
      or
      <q><m>g</m> composed with <m>f</m>.</q>
      Since <m>g \compose f(a) = g \bigl( f(a) \bigr)</m>,
      the notation <m>g \compose f(a)</m> is sometimes read as "<m>g</m> of <m>f</m> of <m>a</m>."
    </p>
    <example>
      <statement>
        <p>
          Define <m>f \colon \mathbb{R} \to \mathbb{R}</m> and <m>g \colon \mathbb{R} \to \mathbb{R}</m> by
          <m>f(x) = 3x</m> and <m>g(x) = x^2</m>.
          Then <m>g \compose f</m> and
          <m>f \compose g</m> are functions from<nbsp/><m>\mathbb{R}</m> to<nbsp/><m>\mathbb{R}</m>.
          For all <m>x \in \mathbb{R}</m>, we have
          <me>
            g \compose f(x) = g \bigl( f(x) \bigr) = g(3x) =(3x)^2 =  9x^2
          </me>
          and
          <me>
            f \compose g(x) = f \bigl( g(x) \bigr) = f(x^2) = 3(x^2) = 3x^2
          </me>.
        </p>
        <p>
          Notice that
          (in this example)
          <m>f \compose g \neq g \compose f</m>,
          so <em>composition is not commutative</em>.
              <idx><h>Commutative property</h><h>for compositions</h></idx>
        </p>
      </statement>
    </example>
    <warning xml:id="ComposeWarn">
      <p>
        To calculate the value of the function
        <m>g \compose f</m> at the point<nbsp/><m>a</m>,
        do <em>not</em> begin by calculating <m>g(a)</m>.
        Instead, you need to calculate <m>f(a)</m>.
        Then plug that value into the function<nbsp/><m>g</m> This may seem strange,
        but it follows from the fact that
        <m>g \compose f(a)</m> means the same thing as <m>g ( f(a))</m>,
        and you're always supposed to evaluate what's inside the parentheses first and work your way outward.
      </p>
    </warning>
    <exercise xml:id="exercise_Functions_func_comp_assoc">
      <statement>
        <p>
          Fill in the blanks of the following proof to show that function composition is associative.
              <idx><h>Composition</h><h>Associative property</h></idx>
              <idx><h>Associativity</h><h>of function composition</h></idx>
        </p>
      </statement>
      <proof>
        <p>
          Suppose <m>f: X \to Y</m>,
          <m>g: Y \to W</m>, and <m>h: W \to Z</m>.
          Then
          <me>
            h \compose (g \compose f)(x) = h((g \compose f)(x)) =\underline{~\lt 1>~}
          </me>,
          and
          <me>
            (h \compose g) \compose f(x) = (h \compose g)(\underline{~\lt 2>~}) =  \underline{~\lt 3>~}
          </me>.
        </p>
        <p>
          Since the two right-hand sides are equal,
          it follows that <m>h \compose (g \compose f)(x) = (h \compose g) \compose f(x)</m>;
          in other words function composition is associative.
        </p>
      </proof>
    </exercise>
    <example>
      <statement>
        <p>
          <xref ref="arrowcomposefig">Figure</xref>
          provides an arrow diagram to illustrate the composition <m>g \compose f</m>.
          <ul>
            <li>
              <p>
                Starting from any point of<nbsp/><m>A</m>,
                follow the arrow (for the function<nbsp/><m>f</m> that starts there to arrive at some point of<nbsp/><m>B</m>.
              </p>
            </li>
            <li>
              <p>
                Then follow the arrow
                (for the function<nbsp/><m>g</m>)
                that starts there to arrive at a point of<nbsp/><m>C</m>.
              </p>
            </li>
          </ul>
        </p>
        <p>
          For example,
          the <m>f</m>-arrow from<nbsp/><m>a</m> leads to<nbsp/><m>m</m> and the <m>g</m>-arrow from<nbsp/><m>m</m> leads to<nbsp/><m>u</m>.
          So <m>g \compose f(a) = u</m>.
        </p>
        <figure xml:id="arrowcomposefig">
          <caption>Arrows for the composition <m>g \circ f</m> are dotted.</caption>
          <image width="55%" source="images/arrowcompose.png"/>
        </figure>
        <p>
          Notice how we write the result as
          <m>g \compose f</m> with <m>g</m> on the left and <m>f</m> on the right even though <m>f</m> appears on the left in <xref ref="arrowcomposefig">Figure</xref>.
          This is an unfortunate consequence of the fact that when we calculate
          <m>g \bigl(f(x) \bigr)</m> we work right to left,
          computing <m>f(x)</m> first and applying <m>g</m> to the result.
        </p>
      </statement>
    </example>
    <p>
      Note that in the definition of <m>g \compose f</m>
      (<xref ref="definition_Functions_composition">Definition</xref>),
      the domain of<nbsp/><m>g:B\rightarrow C</m> is required to be equal to the codomain of<nbsp/><m>f:A \rightarrow B</m>.
      Actually <m>g \compose f</m> can be defined as long as the domain of <m>g</m> <em>contains</em>
      the specified codomain of<nbsp/><m>f</m>.
      This is true because the codomain of a function is not unique:
      if <m>f: A \rightarrow D</m> and <m>D \subset B</m>,
      then <m>B</m> is also a valid codomain of <m>f</m>.
      The reason for the requirement on the domain of <m>g</m> is further explored in the following exercise.
    </p>
    <exercise xml:id="exercise_Functions_ComposeDomainMatch">
      <statement>
        <p>
          Let <m>f \colon \mathbb{N} \to \mathbb{Z}_5</m> defined by <m>f(n) \equiv n \pmod{5}</m>.
        </p>
        <p>
          Let <m>g \colon \mathbb{R} \to \mathbb{R}</m> defined by:
          <me>
            g(x) = x^2
          </me>.
          <ol type="a">
            <li>
              <p>
                Is it possible to define <m>f \compose g</m>?
                <em>Explain</em> your answer.
              </p>
            </li>
            <li>
              <p>
                Is it possible to define <m>g \compose f</m>?
                <em>Explain</em> your answer.
              </p>
            </li>
          </ol>
        </p>
      </statement>
    </exercise>
    <exercise xml:id="exercise_Functions_ComposeExers-form">
      <statement>
        <p>
          The following formulas define functions <m>f</m> and<nbsp/><m>g</m> from<nbsp/><m>\mathbb{R}</m> to<nbsp/><m>\mathbb{R}</m>.
          Find formulas for <m>f \compose g(x)</m> and <m>g \compose f(x)</m>.
          <ol type="a">
            <li xml:id="ComposeExers-form-_3x_1__x2_2_">
              <p>
                <m>f(x) = 3x + 1</m> and <m>g(x) = x^2 + 2</m>
              </p>
            </li>
            <li xml:id="ComposeExers-form-_3x_1__x-1_3_">
              <p>
                <m>f(x) = 3x + 1</m> and <m>g(x) = (x-1)/3</m>
              </p>
            </li>
            <li xml:id="ComposeExers-form-_ax_b__cx_d_">
              <p>
                <m>f(x) = ax + b</m> and <m>g(x) = c x + d</m> (where <m>a,b,c,d \in \real</m>)
              </p>
            </li>
            <li xml:id="ComposeExers-form-__x___x2_">
              <p>
                <m>f(x) = |x|</m> and <m>g(x) = x^2</m>
              </p>
            </li>
            <li xml:id="ComposeExers-form-__x___-x_">
              <p>
                <m>f(x) = |x|</m> and <m>g(x) = -x</m>
              </p>
            </li>
          </ol>
        </p>
      </statement>
    </exercise>
    <exercise xml:id="exercise_Functions_ComposeExers-pairs">
      <statement>
        <p>
          Let <m>A = \{1,2,3,4\}</m>, <m>B = \{\var{a},\var{b},\var{c},\var{d}\}</m>,
          and <m>C = \{\clubsuit, \diamondsuit, \heartsuit, \spadesuit\}</m>.
          The sets of ordered pairs in each part are functions
          <m>f \colon A \to B</m> and <m>g \colon B \to C</m>.
          Represent <m>g \compose f</m> as a set of ordered pairs.
          <ol type="a">
            <li xml:id="ComposeExers-pairs-_abcd__cdhs_">
              <p>
                <m>f = \{(1,\var{a}), (2,\var{b}), (3,\var{c}), (4,\var{d})\}</m>,
                <m>g = \{(\var{a},\clubsuit), (\var{b},\diamondsuit), (\var{c},\heartsuit), (\var{d},\spadesuit) \}</m>
              </p>
            </li>
            <li xml:id="ComposeExers-pairs-_abcd__cccc_">
              <p>
                <m>f = \{(1,\var{a}), (2,\var{b}), (3,\var{c}), (4,\var{d})\}</m>,
                <m>g = \{(\var{a},\clubsuit), (\var{b},\clubsuit), (\var{c},\clubsuit), (\var{d},\clubsuit) \}</m>
              </p>
            </li>
            <li xml:id="ComposeExers-pairs-_bcda__cshd_">
              <p>
                <m>f = \{(1,\var{b}), (2,\var{c}), (3,\var{d}), (4,\var{a})\}</m>,
                <m>g = \{(\var{a},\clubsuit), (\var{b}, \spadesuit), (\var{c},\heartsuit), (\var{d}, \diamondsuit) \}</m>
              </p>
            </li>
            <li xml:id="ComposeExers-pairs-_abcd__cchs_">
              <p>
                <m>f = \{(1,\var{a}), (2,\var{b}), (3,\var{c}), (4,\var{d})\}</m>,
                <m>g= \{(\var{a},\clubsuit), (\var{b},\clubsuit), (\var{c}, \heartsuit), (\var{d}, \spadesuit) \}</m>
              </p>
            </li>
            <li xml:id="ComposeExers-pairs-_abab__cchs_">
              <p>
                <m>f = \{(1,\var{a}), (2,\var{b}), (3,\var{a}), (4,\var{b})\}</m>,
                <m>g = \{(\var{a},\clubsuit), (\var{b},\clubsuit), (\var{c}, \heartsuit), (\var{d}, \spadesuit) \}</m>
              </p>
            </li>
          </ol>
        </p>
      </statement>
    </exercise>
    <exercise xml:id="exercise_Functions_ComposeExers-form2">
      <statement>
        <p>
          The folllowing formulas define functions <m>f</m> and<nbsp/><m>g</m> from<nbsp/><m>\mathbb{C}</m> to<nbsp/><m>\mathbb{C}</m>.
          Find formulas for <m>f \compose g(x)</m> and <m>g \compose f(x)</m>.
          <ol type="a">
            <li xml:id="composeC1">
              <p>
                <m>f(r \cis \theta) = (r+3)\cis(\theta - \pi/6)</m> and <m>g(r \cis \theta) = (r \cis \theta)^2</m>
              </p>
            </li>
            <li xml:id="composeC2">
              <p>
                <m>f(a + bi) = 3a + 4bi</m> and <m>g(a + bi) = (a+bi)^2</m>
              </p>
            </li>
            <li xml:id="composeC3">
              <p>
                <m>f(r \cis \theta) = \log r + i \theta</m> and
                <m>g(a+bi) = e^a \cis b</m> (Note the domain of <m>f</m> is <m>\mathbb{C} \setminus \{0\}</m>).
              </p>
            </li>
            <li xml:id="composeC4">
              <p>
                <m>f(r \cis \theta) = r^3 \cis (\theta + 2)</m> and <m>g(r \cis \theta) = 2r \cis (\theta + 4)</m>
              </p>
            </li>
            <li xml:id="composeC5">
              <p>
                <m>f(z) = |z|</m> and <m>g(z) = -z</m>
              </p>
            </li>
          </ol>
        </p>
      </statement>
    </exercise>
    <exercise xml:id="exercise_Functions_ComposeExers-form3">
      <statement>
        <p>
          The folllowing formulas define functions <m>f</m> and<nbsp/><m>g</m> from<nbsp/><m>\mathbb{Z}_k</m> to<nbsp/><m>\mathbb{Z}_k</m> for different values of <m>k</m>.
          Find formulas for <m>f \compose g(x)</m> and <m>g \compose f(x)</m>.
          <ol type="a">
            <li xml:id="composeZ1">
              <p>
                <m>f,g:\mathbb{Z}_{15} \rightarrow \mathbb{Z}_{15}</m>,
                where <m>f(n) = (7 \odot n) \oplus 6</m> and <m>g(m) = (6\odot m) \oplus 2</m>
              </p>
            </li>
            <li xml:id="composeZ2">
              <p>
                <m>f,g:\mathbb{Z}_{25} \rightarrow \mathbb{Z}_{25}</m>,
                where <m>f(n) = n \odot n</m> and <m>g(m) = m \oplus 3</m>
              </p>
            </li>
            <li xml:id="composeZ3">
              <p>
                <m>f,g:\mathbb{Z}_{7} \rightarrow \mathbb{Z}_{7}</m>,
                where <m>f(n) = (3\odot n) \oplus 5</m> and <m>g(m) =(4 \odot m) \oplus 6</m>
              </p>
            </li>
            <li xml:id="composeZ4">
              <p>
                <m>f,g:\mathbb{Z}_{20} \rightarrow \mathbb{Z}_{20}</m>,
                where <m>f(n) = (4\odot n) \oplus 19</m> and <m>g(m) =(5 \odot m) \oplus 9</m>
              </p>
            </li>
            <li>
              <p>
                <m>f,g:\mathbb{Z}_{q} \rightarrow \mathbb{Z}_{q}</m>,
                where <m>f(n) = (a\odot n) \oplus b</m> and <m>g(m) = (c \odot m) \oplus d</m>
              </p>
            </li>
          </ol>
        </p>
      </statement>
    </exercise>
  </subsection>
  <subsection xml:id="subsec_Functions_Composition_ProvingComposites">
    <title>Proofs involving function composition</title>
    <p>
      The properties of <m>f \compose g</m> depend on the properties of <m>f</m> and <m>g</m>,
      and vice versa.
      Usually these properties are proven by using the definition of composition,
      along with the definitions of other functional properties.
      Here is one example.
    </p>
    <example xml:id="example_Functions_ComposeExers-11">
      <statement>
        <p>
          Suppose <m>f\colon A \to B</m> and
          <m>g \colon B \to C</m>, where <m>A \subset C</m>.
          Show that if
          <me>
            \mbox{\(g \compose f(a) = a\), for every \(a \in A\),}
          </me>
          then <m>f</m> is one-to-one.
        </p>
        <scratchwork>
        <p>
          In proving such statements, it is often helpful to draw a picture
          (see <xref ref="compose1">Figure</xref>)
          showing the sets involved, and arrows joining the the different values.
          To show that <m>f</m> is one-to-one;
          we may show that <m>f(a_1) = f(a_2)</m> implies <m>a_1 = a_2</m>.
          In the picture, we have drawn <m>f(a_1) = f(a_2)</m>.
          Now we are also given that
          <m>g \compose f(a) = a</m>, for every <m>a \in A</m>.
          So as the picture shows, <m>g(f(a_1)) = a_1</m>.
          But what about <m>g(f(a_2))</m>?
          On the one hand,
          we know <m>g \compose f(a_2) = a_2</m> from the problem's givens.
          But on the other hand, since
          <m>f(a_2)=f(a_1)</m> we have <m>g(f(a_2)) = g(f(a_1))</m>,
          or <m>g(f(a_2)) = a_1</m>.
          By substitution, it follows that <m>a_1=a_2</m>.
        </p>
        </scratchwork>
        <figure xml:id="compose1">
          <caption>Scratchwork picture for <xref ref="example_Functions_ComposeExers-11">Example</xref>.</caption>
          <image width="84%" source="images/compose1.png"/>
        </figure>
      </statement>
      <proof>
        <p>
          Given that <m>g \compose f(a) = a</m>,
          for every <m>a \in A</m>, by the definition of composition,
          this means that, for any <m>a_1, a_2 \in A</m> we have
          <me>
            g \bigl( f(a_1) \bigr) = a_1 \mbox{ and }   g \bigl( f(a_2) \bigr) = a_2
          </me>.
        </p>
        <p>
          Now suppose <m>f(a_1) = f(a_2)</m>.
          Then by the definition of a function,
          <me>
            g \bigl( f(a_1) \bigr) =  g \bigl( f(a_2) \bigr)
          </me>
        </p>
        <p>
          By our original hypothesis we then get <m>a_1 = a_2</m>,
          and thus <m>f</m> is one-to-one.
        </p>
      </proof>
    </example>
    <example xml:id="example_Functions_CompositionTheoryExers-gofonto">
      <statement>
        <p>
          Suppose <m>f \colon A \to B</m> and <m>g \colon B \to C</m>.
          Show that if <m>f</m> and<nbsp/><m>g</m> are onto,
          then <m>g \compose f</m> is onto.
        </p>
        <scratchwork>
        <p>
          To show that <m>g \compose f</m> is onto,
          we need to show that for any <m>c \in C</m>,
          there exists a <m>a \in A</m> such that <m>g \compose f(a)=c</m>.
          As <xref ref="compose2">Figure</xref> shows,
          we can work our way backwards.
          Given any <m>c</m>,
          since <m>g</m> is onto we can find a <m>b</m> such that <m>g(b)=c</m>.
          Furthermore,
          since <m>f</m> is onto we can find a <m>a</m> such that <m>f(a)=b</m>.
          By substitution, this gives <m>g(f(a))=c</m>,
          or <m>g \compose f (a) = c</m>.
        </p>
        </scratchwork>
        <figure xml:id="compose2">
          <caption>Scratchwork picture for <xref ref="example_Functions_CompositionTheoryExers-gofonto">Example</xref>.</caption>
          <image width="93%" source="images/compose2.png"/>
        </figure>
      </statement>
      <proof>
        <p>
          Let <m>c</m> be an arbitrary element of <m>C</m>.
          Since <m>g</m> is onto,
          there exists a <m>b</m> in <m>B</m> such that <m>g(b) = c</m>.
          Since <m>f</m> is onto,
          there exists a <m>a</m> in <m>A</m> such that <m>f(a) = b</m>.
          It follows that <m>g \compose f(a) = g(f(a)) = g(b) = c</m>.
          Since <m>c</m> is an arbitrary element of <m>C</m>,
          this implies that <m>g \compose f</m> is onto.
        </p>
      </proof>
    </example>
    <example xml:id="example_Functions_CompositionTheoryExers-g11">
      <statement>
        <p>
          Suppose <m>f \colon A \to B</m> and <m>g \colon B \to C</m>.
          Show that if <m>g \compose f</m> is one-to-one,
          and the range of<nbsp/><m>f</m> is<nbsp/><m>B</m>,
          then <m>g</m> is one-to-one.
        </p>
      </statement>
      <proof>
        <p>
          Suppose <m>b_1</m> and <m>b_2</m> are distinct elements of <m>B</m>.
          Since the range of <m>f</m> is <m>B</m>,
          it follows that there exist <m>a_1 \neq a_2</m> such that
          <m>f(a_1) = b_1</m> and <m>f(a_2) = b_2</m>.
          Since <m>g \compose f</m> is one-to-one,
          it follows that <m>g \compose f(a_1) \neq g \compose f(a_2)</m>.
          But by definition of <m>\compose</m>,
          <m>g \compose f(a_1) = g(f(a_1)) = g(b_1)</m>;
          and similarly <m>g \compose f(a_2) = g(b_2)</m>.
          By substitution, it follows that <m>g(b_1) \neq g(b_2)</m>.
          Thus distinct elements of <m>B</m> always map to distinct elements of <m>C</m> under the function <m>g</m>:
          which is the same as saying that <m>g</m> is one-to-one.
        </p>
        <p>
          An alternative proof runs as follows.
          Let <m>c \in C</m> be such that
          <m>c =g(b_1)</m> and <m>c= g(b_2)</m>.
          Then since the range of <m>f</m> is <m>B</m>,
          there exist <m>a_1</m> and <m>a_2</m> such that
          <m>f(a_1) = b_1</m> and <m>f(a_2) = b_2</m>.
          It follows by substitution that <m>g(f(a_1)) = g(f(a_2))</m>.
          But this is the same as saying that <m>g \compose f(a_1) = g \compose f(a_2)</m>.
          Since <m>g \compose f</m> is one-to-one,
          it follows that <m>a_1 = a_2</m>.
          Applying <m>f</m> to both sides of this equation gives
          <m>f(a_1) = f(a_2)</m>, or <m>b_1 = b_2</m>.
          We have shown that for any <m>c \in C</m>,
          there is at most one <m>b \in B</m> such that <m>g(b) = c</m>.
          This means that <m>g</m> is one-to-one.
        </p>
      </proof>
    </example>
    <exercise xml:id="exercise_Functions_CompositionTheoryExers">
      <statement>
        <ol type="a">
          <li xml:id="CompositionTheoryExers-gof11">
            <p>
              Suppose <m>f \colon A \to B</m> and <m>g \colon B \to C</m>.
              Show that if <m>f</m> and<nbsp/><m>g</m> are one-to-one,
              then <m>g \compose f</m> is one-to-one.
            </p>
          </li>
          <li xml:id="CompositionTheoryExers-f11">
            <p>
              Suppose <m>f \colon A \to B</m> and <m>g \colon B \to C</m>.
              Show that if <m>g \compose f</m> is one-to-one,
              then <m>f</m> is one-to-one.
            </p>
          </li>
          <li xml:id="CompositionTheoryExers-gonto">
            <p>
              Suppose <m>f \colon A \to B</m> and <m>g \colon B \to C</m>.
              Show that if <m>g \compose f</m> is onto, then <m>g</m> is onto.
            </p>
          </li>
          <li xml:id="CompositionTheoryExers-egNotOnto">
            <p>
              Give an example of functions
              <m>f \colon A \to B</m> and <m>g \colon B \to C</m>,
              such that <m>g \compose f</m> is onto, but <m>f</m> is not onto.
            </p>
          </li>
          <li xml:id="CompositionTheoryExers-fonto">
            <p>
              Suppose <m>f \colon A \to B</m> and <m>g \colon B \to C</m>.
              Show that if <m>g \compose f</m> is onto,
              and <m>g</m><nbsp/>is one-to-one, then <m>f</m> is onto.
            </p>
          </li>
          <li xml:id="CompositionTheoryExers-fontob">
            <p>
              Suppose <m>f \colon A \to B</m> and <m>g \colon B \to C</m>.
              Show that if <m>f</m> is onto and
              <m>g \compose f</m> is 1-1, then <m>g</m> is 1-1.
            </p>
          </li>
          <li xml:id="CompositionTheoryExers-gNot11">
            <p>
              Define <m>f \colon [0,\infty) \to \real</m> by <m>f(x) = x</m>.
              Find a function <m>g \colon \mathbb{R} \to \mathbb{R}</m> such that <m>g \compose f</m> is one-to-one,
              but <m>g</m> is <em>not</em> one-to-one.
            </p>
          </li>
          <li xml:id="CompositionTheoryExers-what">
            <p>
              Suppose <m>f</m> and<nbsp/><m>g</m> are functions from<nbsp/><m>A</m> to<nbsp/><m>A</m>.
              If <m>f(a) = a</m> for every <m>a \in A</m>,
              then what are <m>f \compose g</m> and <m>g \compose f</m>?
            </p>
          </li>
        </ol>
      </statement>
    </exercise>
    <exercise xml:id="exercise_Functions_BijectionComposeExer">
      <statement>
        <p>
          Suppose <m>f \colon A \to B</m> and <m>g \colon B \to C</m>.
          Use the properties from <xref ref="exercise_Functions_CompositionTheoryExers">Exercise</xref> to prove the following:
          <ol type="a">
            <li xml:id="BijectionComposeExer-gf">
              <p>
                Show that if <m>f</m> and<nbsp/><m>g</m> are bijections,
                then <m>g \compose f</m> is a bijection.
              </p>
            </li>
            <li xml:id="BijectionComposeExer-g">
              <p>
                Show that if <m>f</m> and <m>g\compose f</m> are bijections,
                then <m>g</m> is a bijection.
              </p>
            </li>
            <li xml:id="BijectionComposeExer-f">
              <p>
                Show that if <m>g</m> and<nbsp/><m>g \compose f</m> are bijections,
                then <m>f</m> is a bijection.
              </p>
            </li>
          </ol>
        </p>
      </statement>
    </exercise>
    <p>
      We have shown that various properties of
      <m>f \compose g</m> follow based on properties of <m>f</m> and <m>g</m>.
      We can also show corresponding
      <q>negative</q>
      properties as the contrapositives of these properties.
    </p>
    <example xml:id="example_Functions_composeNotProps">
      <statement>
        <p>
          Suppose <m>f \colon A \to B</m> and
          <m>g \colon B \to C</m> and <m>g</m> is <em>not</em> onto.
          Then <m>g \compose f</m> is <em>not</em> onto.
        </p>
      </statement>
      <proof>
        <p>
          This is just the contrapositive of <xref ref="exercise_Functions_CompositionTheoryExers">Exercise</xref><xref ref="CompositionTheoryExers-gonto"/> , which says that
          <m>g \compose f</m> is onto implies that <m>g</m> is onto.
        </p>
      </proof>
    </example>
    <exercise xml:id="exercise_Functions_BijectionComposeExer2">
      <statement>
        <p>
          Suppose <m>f \colon A \to B</m> and <m>g \colon B \to C</m>.
          <ol type="a">
            <li xml:id="BijectionComposeExer-g2">
              <p>
                Show that if <m>f</m> is not one-to-one,
                then <m>g \compose f</m> is not one-to-one.
              </p>
            </li>
            <li>
              <p>
                Prove or disprove:
                <m>g \compose f</m> is a bijection if and only if both <m>g</m> and <m>f</m> are bijections.
              </p>
            </li>
          </ol>
        </p>
      </statement>
    </exercise>
    <exercise>
      <statement>
        <p>
          Using properties from <xref ref="exercise_Functions_CompositionTheoryExers">Exercises</xref>
          and <xref ref="exercise_Functions_BijectionComposeExer"></xref>
          (or their contrapositives),
          determine which of the following are bijections.
          <ol type="a">
            <li>
              <p>
                <m>f \compose g</m> in <xref ref="exercise_Functions_ComposeExers-form">Exercise</xref> parts (a)-(e).
              </p>
            </li>
            <li>
              <p>
                <m>f \compose g</m> in <xref ref="exercise_Functions_ComposeExers-form2">Exercise</xref> parts (a)-(e).
              </p>
            </li>
            <li>
              <p>
                <m>f \compose g</m> in <xref ref="exercise_Functions_ComposeExers-form3">Exercise</xref> parts (a)-(e).
              </p>
            </li>
          </ol>
        </p>
      </statement>
    </exercise>
    <exercise>
      <statement>
        <p>
          Suppose <m>f \colon A \to B</m>,
          <m>g \colon B \to A</m> and
          <m>f \compose g</m> is a bijection. prove that <m>g \compose f</m> is also a bijection.
        </p>
      </statement>
    </exercise>
    <p>
      The following exercise leads into the next section:
    </p>
    <exercise xml:id="exercise_Functions_InverseMakesBijectionExer">
      <statement>
        <p>
          Suppose
          <ul>
            <li>
              <p>
                <m>f \colon A \to B</m>,
              </p>
            </li>
            <li>
              <p>
                <m>g \colon B \to A</m>,
              </p>
            </li>
            <li>
              <p>
                <m>g \compose f(a) = a</m>, for every <m>a \in A</m>, and
              </p>
            </li>
            <li>
              <p>
                <m>f \compose g(b) = b</m>, for every <m>b \in B</m>.
              </p>
            </li>
          </ul>
        </p>
        <p>
          Show that <m>f</m> is a bijection.
        </p>
      </statement>
    </exercise>
  </subsection>
</section>